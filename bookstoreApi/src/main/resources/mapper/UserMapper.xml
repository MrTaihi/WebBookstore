<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace属性，用于指定当前的映射文件和哪个接口进行映射，需要指定接口的文件路径，需要标注包的完整路径接口-->
<mapper namespace="com.cy.bookstore.mapper.UserMapper">
<!-- 自定义映射规则：resultMap标签来完成映射规则的定义 -->
<!--
    id属性：表示给这个映射复制分配一个唯一的id值
    type:取值时一个类，表示的是数据库中的查询结构与java哪个实体类进行结果集的映射
   -->
    <resultMap id="userEntityMap" type="com.cy.bookstore.entity.User">
        <!-- 主键是不能省略的 -->
        <id column="uid" property="uid" />
        <result column="is_delete" property="isDelete" />
        <result column="created_user" property="createdUser" />
        <result column="created_time" property="createdTime" />
        <result column="modified_user" property="modifiedUser" />
        <result column="modified_time" property="modifiedTime" />
        <result column="role_id" property="roleId" />
    </resultMap>
    <!--  id属性：表示映射中的方法的名称，直接在标签的内容部分来编写sql语句  -->
    <!--  useGeneratedKeys开启字段自增 keyProperty表示将哪个字段作为主键进行递增  -->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO user(
            username,password,salt,phone,email,sex,
            avatar,is_delete,created_user,created_time,
            modified_user,modified_time
        )values(
            #{username}, #{password}, #{salt}, #{phone}, #{email}, #{sex},
           #{avatar}, #{isDelete}, #{createdUser}, #{createdTime},
           #{modifiedUser}, #{modifiedTime}
       )
    </insert>
<!-- select语句在执行的时候，查询的结果是一个对象，多个对象
    resultType 表示查询的结果集类型 只需要指定对应映射类的类型 并且包含完整包接口
    resultMap 表情当表的字段和类的对象属性的字段不一致时，来自定义查询结果集的映射规则
   -->
    <select id="findByUsername" resultMap="userEntityMap">
        SELECT * FROM user WHERE username = #{username}
    </select>

    <select id="findByPhone" resultMap="userEntityMap">
        select * from user where phone = #{phone} limit 1
    </select>

    <update id="updatePassword">
        update user SET
            password = #{password},
            modified_time = #{modifiedTime},
            modified_user = #{modifiedUser}
        WHERE uid = #{uid}
    </update>

    <select id="findByUid" resultMap="userEntityMap">
        select * from user WHERE uid = #{uid}
    </select>

    <update id="updateInfoByUid">
        update user SET
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="sex != null">sex = #{sex},</if>
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

    <update id="updateAvatarByUid">
        update user SET
            avatar = #{avatar},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>
</mapper>